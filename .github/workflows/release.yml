name: Release Docker Image

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
    push:
        branches: ["main"]

env:
    REGISTRY: us-central1-docker.pkg.dev
    IMAGE: quic-video/deploy/moq-js:latest
    SERVICE: web

jobs:
    build:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
            id-token: write

        # Only one release at a time and cancel prior releases
        concurrency:
            group: release
            cancel-in-progress: true

        steps:
            - name: Checkout
              uses: actions/checkout@v3

            # I'm paying for Depot for faster ARM builds.
            - name: Setup depot
              uses: depot/setup-action@v1

            # Log in to GCP
            - id: auth
              name: Authenticate to Google Cloud
              uses: google-github-actions/auth@v1
              with:
                  token_format: access_token
                  credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

            # This example uses the docker login action
            - uses: docker/login-action@v1
              with:
                  registry: ${{ env.REGISTRY }}
                  username: oauth2accesstoken
                  password: ${{ steps.auth.outputs.access_token }}

            # This example runs "docker login" directly to Artifact Registry.
            - run: |-
                  echo '${{ steps.auth.outputs.access_token }}' | docker login -u oauth2accesstoken --password-stdin https://${{ENV.REGISTRY}}

            # Build and push Docker image with Depot
            - name: Build and push Docker image
              uses: depot/build-push-action@v1
              with:
                  project: hppp3x0qjc
                  context: .
                  push: true
                  tags: ${{env.REGISTRY}}/${{env.IMAGE}}

            # Deploy to cloud run
            - name: Update Cloud Run
              uses: google-github-actions/deploy-cloudrun@v1
              with:
                  service: ${{env.SERVICE}}
                  image: ${{env.REGISTRY}}/${{env.IMAGE}}
